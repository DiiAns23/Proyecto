    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clases;

/**
 *
 * @author diego
 */
import java.awt.Desktop;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.paint.Stop;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Interfaz extends javax.swing.JFrame {

    public static String ruta, nombreArchivo, ER;
    public static String temporal = " ";
    public static LinkedList<String> nombreFollow = new LinkedList<>();
    public static LinkedList<String> nombreArbol = new LinkedList<>();
    public static LinkedList<String> nombretrans = new LinkedList<>();

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        comando = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        MostraArbol = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        comando.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(comando);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 480, 380);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel1.setText("Arbol Diagramado");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 460, 170, 26);

        MostraArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostraArbolActionPerformed(evt);
            }
        });
        jPanel1.add(MostraArbol);
        MostraArbol.setBounds(30, 490, 160, 40);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel2.setText("Archivo de Entrada");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 20, 170, 26);

        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(590, 10, 590, 530);

        jMenu1.setText("Archivo");
        jMenu1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jMenuItem3.setText("Guardar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acciones");
        jMenu2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jMenuItem2.setText("Generar Automata");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1247, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            open();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        agregar();

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void MostraArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostraArbolActionPerformed

        int posicion;
        posicion = MostraArbol.getSelectedIndex();

        System.out.println(posicion);

        
        ImageIcon imgIcon = new ImageIcon("D:\\Casca\\Documents\\Compi 1\\-OLC1-Practica1-201701187\\[OLC1]Practica1_201701187\\" + nombreArbol.get(posicion) + ".png");
        Image imgEscalada = imgIcon.getImage().getScaledInstance(jLabel3.getWidth(),jLabel3.getHeight(), Image.SCALE_SMOOTH);
        Icon iconoEscalado = new ImageIcon(imgEscalada);
        jLabel3.setIcon(iconoEscalado);
        

    }//GEN-LAST:event_MostraArbolActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       save1();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void open()  throws IOException {

        JFileChooser JFC = new JFileChooser();
        JFC.setFileFilter(new FileNameExtensionFilter("todos los archivos *","txt","olc","OLC"));
        int abrir = JFC.showDialog(null, "Abrir");
        if (abrir == JFileChooser.APPROVE_OPTION) {

            FileReader FR = null;
            BufferedReader BR = null;
            try {

                File archivo = JFC.getSelectedFile();
                String rut = JFC.getSelectedFile().getAbsolutePath();
                if (rut.endsWith(".txt")|| rut.endsWith(".olc")) {

                    FR = new FileReader(archivo);
                    BR = new BufferedReader(FR);
                    String linea;
                    String contenido = "";
                    ruta = archivo.getAbsolutePath();
                    interpretar(ruta);
                    //interpretar(ruta);
                    comando.setText(null);
                    while ((linea = BR.readLine()) != null) {
                        comando.setText(comando.getText()+linea+"\n");
                    }
                    

                } else {
                    JOptionPane.showMessageDialog(this, "Archivo no soportado", "Oops! Error", JOptionPane.ERROR_MESSAGE);
                    open();
                }

            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (null != FR) {
                        FR.close();
                    }

                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
    
    public static void interpretar(String path){
        Analizadores.Sintactico pars;
        try {
            pars=new Analizadores.Sintactico(new Analizadores.Lexico(new FileInputStream(path)));
            pars.parse();        
        } catch (Exception ex) {
            System.out.println("Error Fatal de Compilacion :c");
        }
    }

     public void save1(){
              if(ruta != null){
                try {
                    FileWriter fichero2 = new FileWriter(ruta);
                    PrintWriter pw2 = null;
                    pw2 = new PrintWriter(fichero2);
                    String[] escribe2 = comando.getText().split("\n");
                    for(String  e: escribe2){
                    pw2.println(e);
                            }
                        fichero2.close();
                        JOptionPane.showMessageDialog(null, "Se realizaron los cambios");
                        temporal = comando.getText();
                           } catch (IOException ex) {
                             
                           }
            }else{
                save();
        }        
    }
    
     public void save(){
        String texto = comando.getText();//variable para comparacion
        
        if (texto.matches("[[ ]*[\n]*[\t]]*")) {
            JOptionPane.showMessageDialog(null,"No hay texto para guardar!", "Oops! Error", JOptionPane.ERROR_MESSAGE);
        }else{
            
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("todos los archivos *.ER", "er","ER"));
            int seleccion = fileChooser.showSaveDialog(null);
            try{
                if (seleccion == JFileChooser.APPROVE_OPTION){
                    File JFC = fileChooser.getSelectedFile();
                    String PATH = JFC.getAbsolutePath();
                    PrintWriter printwriter = new PrintWriter(JFC);
                    printwriter.print(comando.getText());
                    printwriter.close();
                    

                    if(!(PATH.endsWith(".er"))){
                        File temp = new File(PATH+".er");
                        JFC.renameTo(temp);
                    }
                    
                    JOptionPane.showMessageDialog(null,"Guardado exitoso!", "Guardado exitoso!", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,"Error al guardar el archivo!", "Oops! Error", JOptionPane.ERROR_MESSAGE);
            }
        }           
    } 

    public void listanombrearbol(String nombre) {
        nombreArbol.add(nombre);
    }

    public void listanombrefollow(String nombre) {
        nombreFollow.add(nombre);
    }

    public void listanombreTransicion(String nombre) {
        nombretrans.add(nombre);
    }

    public void agregar() {

        for (int i = 0; i < nombreArbol.size(); i++) {

            MostraArbol.addItem(nombreArbol.get(i));
            System.out.println(nombreArbol.get(i));
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> MostraArbol;
    private javax.swing.JTextPane comando;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
